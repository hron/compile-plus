* How to reload the package in active Emacs session for testing

  #+begin_src emacs-lisp
    (defun rude-full-reload ()
      "Reload `rude' package."
      (interactive)
      (dolist (dir (list default-directory (expand-file-name "test" default-directory)))
      (push dir load-path))

      (when-let* ((buff (get-buffer "*Customize Group: Compile Plus*")))
        (kill-buffer buff))

      (let ((all-files (append (directory-files default-directory nil "\\.el$")
                               '("test/rude-test-helpers.el"))))
        (dolist (file all-files)
          (let ((feat (intern (file-name-base file))))
            (when (featurep feat)
              (unload-feature feat t)))
          (load-file file)))

      (global-set-key (kbd "M-t") #'rude-compile-thing-at-point)
      (global-set-key (kbd "M-C-t") #'rude-dape-thing-at-point))

    (rude-full-reload)
  #+end_src

#+RESULTS:
: rude-dape-thing-at-point

* Future emacs-lisp-mode future history maybe:

  #+begin_src emacs-lisp
(with-current-buffer (get-buffer "rude-rust-ts-tests.el")
  (save-excursion
    (goto-char (pos-eol))
    (search-backward-regexp "ert-deftest \\([^ ]+\\)")
    (let ((test-file (file-relative-name buffer-file-name))
          (test-name (match-string-no-properties 1)))
      (format "emacs --batch  -L . -l %s --eval '(ert-run-tests-batch-and-exit \"%s\")'"
              test-file
              test-name))))
  #+end_src
